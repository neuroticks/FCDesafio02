
networks:
  node_mysql_net:
    driver: bridge
  node_nginx_net:
    driver: bridge

services:

    dck_srv_mysql: 
        tty: true
        env_file: .env
        image: mysql:latest
        command: --innodb-use-native-aio=0
        container_name: ${MYSQL_SRV_HOST}
        restart: always
        volumes: 
        - ./mysql_folder/arquivos_db:/var/lib/mysql
        - ./mysql_folder/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
        environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
            interval: 3s
            timeout: 10s
            retries: 5
        networks:
        - node_mysql_net

    dck_srv_node:
        tty: true
        env_file: .env
        container_name: ${NODE_APP_SERVER_HOST}
        image: node_alpine_image
        build:
            context: ./node_app_folder
            dockerfile: ./Dockerfile.node
        volumes: 
        - ./node_app_folder:/usr/src/app
        networks:
        - node_mysql_net
        - node_nginx_net
        depends_on:
            dck_srv_mysql:
                condition: service_healthy
        command: sh -c "npm install && npm run dev"

    dck_srv_nginx:
        tty: true
        env_file: .env
        image: nginx:alpine
        restart: always
        container_name: ${NGINX_SRV_HOST}
        ports:
            - ${NGINX_SRV_PORT}:${NGINX_SRV_PORT}
        networks:
        - node_nginx_net
        volumes:
        - ./nginx_folder/default.conf.template:/etc/nginx/templates/default.conf.template
